{"version":3,"sources":["webpack:///./src/components/card.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Card","props","react_default","a","createElement","style","border","boxShadow","padding","marginBottom","borderRadius","title","color","date","content","__webpack_require__","d","__webpack_exports__","query","IndexPage","_ref","data","layout","seo","allGoogleSpreadsheetSheet1","edges","map","card","key","node","id","gatsby_browser_entry","to","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps","arrayOf","Header","siteTitle","background","margin","maxWidth","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-index-js-4cbd6f5fb88334d5ae54.js","sourcesContent":["import React from \"react\"\n\nconst Card = (props) =>(\n    <div\n        style={{\n            border:'1px solid #eaeaea',\n            boxShadow:'2px 2px 5px grey',\n            padding:'10px',\n            marginBottom:'10px',\n            borderRadius:'10px'\n        }}\n    >\n        <h1>{props.title}</h1>\n        <p style={{color:'grey'}}>{props.date}</p>\n        <p>{props.content}</p>\n    </div>\n)\n\nexport default Card\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Card from \"../components/card\"\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    {\n      data.allGoogleSpreadsheetSheet1.edges.map(d=>(\n        <Card \n          key={d.node.id} \n          title={d.node.title} \n          content={d.node.content} \n          date={d.node.date}\n        />\n      ))\n    }\n    <Link to=\"/page-2/\">Go to page 2</Link>\n  </Layout>\n)\n\nexport const query = graphql`\n  query{\n    allGoogleSpreadsheetSheet1 {\n      edges {\n        node {\n          id\n          title\n          date\n          content\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}